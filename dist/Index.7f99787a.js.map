{"version":3,"sources":["../src/Exchanger.ts","../src/Index.ts"],"names":[],"mappings":";;;;;ACAA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAEA,IAAM,MAAM,GAAuB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;AACnE,IAAM,MAAM,GAAuB,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC;AAEpE,iBAAiB,EAAE;AAEnB,SAAS,iBAAiB,CAAA,EAAA;EACxB,IAAI,MAAM,KAAK,IAAI,EAAE;IACnB,IAAI,MAAM,YAAY,iBAAiB,EAAE;IDThC,ECUP,MAAM,CDVU,ACUT,gBAAgB,CAAU,OAAO,EAAE,UAAC,KAAiB,EAAI;EDLpE,MCMM,GDNN,ECMW,CAAC,ODNA,IAAY,EAAE,CCMA,EAAE,GDNY,EAAE,MAAc,EAAA;IAAA,ICOlD,KAAK,CAAC,KDP4C,OAAA,GCO7B,EAAE,IDP2B;IACtD,IAAI,ACQA,CDRC,GCQK,CDRD,GAAG,IAAI,ACQE,GAAe,IAAI,WAAA,CAAA,SAAS,CACxC,gBAAgB,EAAE,EAClB,kBAAkB,EAAE,EACpB,kBAAkB,EAAE,CACrB;IDXL,IAAI,ACaA,CDbC,MAAM,ACaA,CAAC,EDbE,CCaC,KDbK,cCaL,MAAA,CAAmB,QAAQ,CAAC,gBAAgB,EAAE,EAAG;IDZhE,IAAI,ACcA,CDdC,GCcG,GDdG,GAAG,ACcA,KAAK,CDdC,GCcG,IAAI,MAAM,YAAY,WAAW,EAAE;EDb5D,QCcQ,MAAM,CAAC,SAAS,MAAA,MAAA,CAAM,QAAQ,CAAC,gBAAgB,EAAE,CAAE;EDZ3D;EACA,MCcM;EDdN,MCeM,MDfN,CAAA,SAAA;IAAA,GAAA,CCgBM;IDhBN,ECiBI,CAAC,CAAC,CDjBN,EACO,SAAA,iBAAA,EAAgB;KCiBpB,CDhBD,IAAM,CCgBC,WDhBW,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE;MACxC,ACgBE,IDhBI,ECgBE,IAAI,KAAK,CAAC,EDhBE,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,SCgBS,CAAC;MDdjD,OAAO,YAAY,GAAG,cAAc,GAAG,IAAI,CAAC,MAAM;GCgBnD,CDfD,KCeO;EDfN,ECgBC,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC;EDhBlD,OAAA,SAAA;AAAA,ACkBH;ADpCA,ACsCA,ODtCA,CAAA,CCsCS,QDtCT,GAAA,KCsCyB,CAAA,EAAA,CDtCzB;ECuCE,IAAM,SAAS,GAAuB,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC;EAC3E,IAAI,SAAS,KAAK,IAAI,IAAI,SAAS,YAAY,gBAAgB,EAAE;IAC/D,OAAO,SAAS,CAAC,aAAa;GAC/B,MAAM;IACL,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;;AAEpD;AAEA,SAAS,kBAAkB,CAAA,EAAA;EACzB,IAAM,WAAW,GACf,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC;EACzC,IAAI,WAAW,KAAK,IAAI,IAAI,WAAW,YAAY,gBAAgB,EAAE;IACnE,OAAO,WAAW,CAAC,aAAa;GACjC,MAAM;IACL,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;;AAEpD;AAEA,SAAS,kBAAkB,CAAA,EAAA;EACzB,IAAM,WAAW,GACf,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC;EACzC,IAAI,WAAW,KAAK,IAAI,IAAI,WAAW,YAAY,gBAAgB,EAAE;IACnE,OAAO,WAAW,CAAC,aAAa;GACjC,MAAM;IACL,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;;AAEpD","file":"Index.7f99787a.js","sourceRoot":"..\\public","sourcesContent":["export class Exchanger {\r\n  private gold: number;\r\n  private silver: number;\r\n  private copper: number;\r\n\r\n  constructor(gold: number, silver: number, copper: number) {\r\n    this.gold = gold;\r\n    this.silver = silver;\r\n    this.copper = copper;\r\n  }\r\n\r\n  //   Every gold coin is worth 20 silver coins\r\n  //   Every silver coin is worth 12 cooper coins\r\n  public allCoinsToCopper(): number {\r\n    const goldToCopper = this.gold * 20 * 12;\r\n    const silverToCopper = this.silver * 12;\r\n\r\n    return goldToCopper + silverToCopper + this.copper;\r\n  }\r\n}\r\n","import { Exchanger } from \"./Exchanger\";\r\n\r\nconst button: HTMLElement | null = document.querySelector(\"#count\");\r\nconst result: HTMLElement | null = document.querySelector(\".result\");\r\n\r\ninitEventListener();\r\n\r\nfunction initEventListener() {\r\n  if (button !== null) {\r\n    if (button instanceof HTMLButtonElement) {\r\n      button.addEventListener<\"click\">(\"click\", (event: MouseEvent) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const exchange : Exchanger = new Exchanger(\r\n          getTempGoldCoins(),\r\n          getTempSilverCoins(),\r\n          getTempCooperCoins()\r\n        );\r\n\r\n        console.log(`all to copper: ${exchange.allCoinsToCopper()}`);\r\n\r\n        if (result !== null && result instanceof HTMLElement) {\r\n          result.innerHTML = `${exchange.allCoinsToCopper()}`;\r\n        }\r\n\r\n        // console.log(\r\n        //   `values: ${getTempGoldCoins()}, ${getTempSilverCoins()}, ${getTempCooperCoins()}`\r\n        // );\r\n      });\r\n    } else {\r\n      throw new Error(\"Html Element is not a button\");\r\n    }\r\n  } else {\r\n    throw new Error(\"Button for exchange not found!\");\r\n  }\r\n}\r\n\r\nfunction getTempGoldCoins(): number {\r\n  const goldCoins: HTMLElement | null = document.querySelector(\"#gold-coins\");\r\n  if (goldCoins !== null && goldCoins instanceof HTMLInputElement) {\r\n    return goldCoins.valueAsNumber;\r\n  } else {\r\n    throw new Error(\"Html Element is null or wrong\");\r\n  }\r\n}\r\n\r\nfunction getTempSilverCoins(): number {\r\n  const silverCoins: HTMLElement | null =\r\n    document.querySelector(\"#silver-coins\");\r\n  if (silverCoins !== null && silverCoins instanceof HTMLInputElement) {\r\n    return silverCoins.valueAsNumber;\r\n  } else {\r\n    throw new Error(\"Html Element is null or wrong\");\r\n  }\r\n}\r\n\r\nfunction getTempCooperCoins(): number {\r\n  const copperCoins: HTMLElement | null =\r\n    document.querySelector(\"#copper-coins\");\r\n  if (copperCoins !== null && copperCoins instanceof HTMLInputElement) {\r\n    return copperCoins.valueAsNumber;\r\n  } else {\r\n    throw new Error(\"Html Element is null or wrong\");\r\n  }\r\n}\r\n"]}