{"version":3,"sources":["../src/Exchanger.ts","../src/Index.ts"],"names":[],"mappings":";;;;;ACAA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAEA,IAAM,MAAM,GAAuB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;AACnE,IAAM,MAAM,GAAuB,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC;AAEpE,iBAAiB,EAAE;AAEnB,SAAS,iBAAiB,CAAA,EAAA;EACxB,IAAI,MAAM,KAAK,IAAI,EAAE;IACnB,IAAI,MAAM,YAAY,iBAAiB,EAAE;IDThC,ECUP,MAAM,CDVU,ACUT,gBAAgB,CAAU,OAAO,EAAE,UAAC,KAAiB,EAAI;EDLpE,MCMM,GDNN,ECMW,CAAC,ODNA,IAAY,EAAE,CCMA,EAAE,GDNY,EAAE,MAAc,EAAA;IAAA,ICOlD,KAAK,CAAC,KDP4C,OAAA,GCO7B,EAAE,IDP2B;IACtD,IAAI,ACQA,CDRC,IAAI,GAAG,IAAI,CCQC,EAAE;IDPnB,IAAI,ACSA,CDTC,GCSK,GDTC,GAAG,ECSI,GAAc,CDTZ,GCSgB,WAAA,CAAA,SAAS,CACvC,QAAQ,CAAC,MAAM,CAAC,EAChB,QAAQ,CAAC,QAAQ,CAAC,EAClB,QAAQ,CAAC,QAAQ,CAAC,CACnB;IDZL,IAAI,ACcA,CDdC,GCcG,GDdG,GAAG,ACcA,KAAK,CDdC,GCcG,IAAI,MAAM,YAAY,WAAW,EAAE;EDb5D,QCcQ,MAAM,CAAC,SAAS,MAAA,MAAA,CAAM,QAAQ,CAAC,gBAAgB,EAAE,CAAE;EDZ3D;EACA,ICaI,CAAC,CAAC;EDbN,GCcG,MAAM,GDdT,CAAA,SAAA;IAAA,ECeI,CDfJ,KCeU,IAAI,KAAK,CAAC,8BAA8B,CAAC;IDfnD,KAAA,EACO,SAAA,iBAAA,EAAgB;GCgBtB,GDfC,GCeK,CDfC,YAAY,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE;ICgBxC,EDfA,IAAM,ACeA,IAAI,KAAK,CAAC,IDfI,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,SCeS,CAAC;MDbjD,OAAO,YAAY,GAAG,cAAc,GAAG,IAAI,CAAC,MAAM;ACetD,IDdE;ACgBF,EDhBG,OCgBM,QAAQ,CAAC,QAAgB,EAAA;EDhB/B,ACiBD,IAAM,GDjBL,ECiBU,GAA4B,IDjBtC,ICiB8C,CAAC,aAAa,KAAA,MAAA,CACvD,QAAQ,YACb;ADnBA,ECoBD,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,YAAY,gBAAgB,EAAE;ADtC3D,ICuCI,GDvCJ,CAAA,GCuCW,KAAK,CDvChB,ACuCiB,GDvCjB,SAAA,CCuC8B;GAC3B,MAAM;IACL,MAAM,IAAI,KAAK,kCAAkC;;AAErD;AAEA,SAAS,aAAa,CAAA,EAAA;EACpB,IAAM,eAAe,GACnB,QAAQ,CAAC,aAAa,CAAC,mBAAmB,CAAC;EAE3C,IACE,eAAe,KAAK,IAAI,IACxB,eAAe,YAAY,WAAW,EACtC;IACA,eAAe,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG;IACnC,eAAe,CAAC,KAAK,CAAC,SAAS,GAAG,kBAAkB;GACrD,MAAM;IACL,MAAM,IAAI,KAAK,iCAAiC;;AAGtD","file":"Index.7f99787a.js","sourceRoot":"..\\public","sourcesContent":["export class Exchanger {\r\n  private gold: number;\r\n  private silver: number;\r\n  private copper: number;\r\n\r\n  constructor(gold: number, silver: number, copper: number) {\r\n    this.gold = gold;\r\n    this.silver = silver;\r\n    this.copper = copper;\r\n  }\r\n\r\n  //   Every gold coin is worth 20 silver coins\r\n  //   Every silver coin is worth 12 cooper coins\r\n  public allCoinsToCopper(): number {\r\n    const goldToCopper = this.gold * 20 * 12;\r\n    const silverToCopper = this.silver * 12;\r\n\r\n    return goldToCopper + silverToCopper + this.copper;\r\n  }\r\n}\r\n","import { Exchanger } from \"./Exchanger\";\r\n\r\nconst button: HTMLElement | null = document.querySelector(\"#count\");\r\nconst result: HTMLElement | null = document.querySelector(\".result\");\r\n\r\ninitEventListener();\r\n\r\nfunction initEventListener() {\r\n  if (button !== null) {\r\n    if (button instanceof HTMLButtonElement) {\r\n      button.addEventListener<\"click\">(\"click\", (event: MouseEvent) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        showResultBox();\r\n\r\n        const exchange: Exchanger = new Exchanger(\r\n          getCoins(\"gold\"),\r\n          getCoins(\"silver\"),\r\n          getCoins(\"copper\")\r\n        );\r\n\r\n        if (result !== null && result instanceof HTMLElement) {\r\n          result.innerHTML = `${exchange.allCoinsToCopper()}`;\r\n        }\r\n      });\r\n    } else {\r\n      throw new Error(\"Html Element is not a button\");\r\n    }\r\n  } else {\r\n    throw new Error(\"Button for exchange not found!\");\r\n  }\r\n}\r\n\r\nfunction getCoins(material: string): number {\r\n  const coins: HTMLInputElement | null = document.querySelector(\r\n    `#${material}-coins`\r\n  );\r\n  if (coins !== null && coins instanceof HTMLInputElement) {\r\n    return coins.valueAsNumber;\r\n  } else {\r\n    throw new Error(`Input Element is null or wrong`);\r\n  }\r\n}\r\n\r\nfunction showResultBox(): void {\r\n  const resultContainer: HTMLElement | null =\r\n    document.querySelector(\".result-container\");\r\n\r\n    if (\r\n      resultContainer !== null &&\r\n      resultContainer instanceof HTMLElement\r\n    ) {\r\n      resultContainer.style.opacity = \"1\";\r\n      resultContainer.style.transform = \"translateY(10px)\";\r\n    } else {\r\n      throw new Error(`HTML Element is null or wrong`);\r\n    }\r\n  \r\n}\r\n"]}